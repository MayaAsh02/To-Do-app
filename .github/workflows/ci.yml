name: Flask App test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Set environment variable
      run: echo "ATLAS_CONNECTION_STRING=${{ secrets.ATLAS_CONNECTION_STRING }}" >> $GITHUB_ENV
  

    - name: Install dependencies
      run: |
       python -m pip install --upgrade pip
       pip install -r server/requirements.txt
       pip install pymongo[srv]  # Add this line to install pymongo with the srv extra

    - name: Run tests
      run: python3 -m unittest discover tests
  
    - name: Get Commit SHA
      id: commit_sha
      run: echo "::set-output name=sha::$(git rev-parse HEAD)"
    
    - name: Run Local Test
      run: |
        # Run Docker Compose locally
        docker-compose up -d

        # Wait for a moment to let containers start
        sleep 20

        # Test if the app is running by making a request to 127.0.0.1:5000
        response_code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:5000)

        # Exit if response code is not 200
        if [ $response_code -ne 200 ]; then
          echo "Local test failed with response code: $response_code"
          exit 1
        fi

    - name: set git config
      run: |
          git config --global user.email "maya01911@gmail.com"
          git config --global user.name "maya"





    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push app
      uses: docker/build-push-action@v4
      with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

    - name: Update values.yaml
      run: |
            export BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            export COMMIT_SHORT_SHA=$(git rev-parse --short HEAD)
            yq eval '.app.image.tag = env(BRANCH_NAME) + "-" + env(COMMIT_SHORT_SHA)' -i Helm/values.yaml
  
    - name: update the changes
      run: |
            git add .
            git commit -m "Auto updating values.yaml"
            git pull origin main
            git push origin HEAD:main
  